# tp-reservation-system/nginx.conf
worker_processes 1; # Peut être auto ou le nombre de cœurs CPU

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types; # Chemin standard dans l'image Nginx
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80; # Nginx écoutera sur le port 80 à l'intérieur du conteneur
        server_name localhost; # Ou ton domaine si tu en avais un

        # Servir les fichiers statiques du frontend
        location / {
            root   /usr/share/nginx/html; # Chemin où seront copiés les fichiers frontend dans le conteneur
            index  index.html index.htm;
            try_files $uri $uri/ /index.html; # Pour les SPA (Single Page Apps), ici juste pour bien servir index.html
        }

        # Proxy pour l'API du service event-booking
        location /api/ {
            # Le nom 'event-booking-service' sera résolu par Docker Compose vers l'IP du conteneur
            proxy_pass http://event-booking-service:3000/; # Important: le / final sur proxy_pass

            # Headers pour le proxy
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Pour les WebSockets si besoin (pas utilisé ici)
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        # Emplacement pour les erreurs (optionnel)
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}